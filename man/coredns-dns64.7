.\" Generated by Mmark Markdown Processer - mmark.miek.nl
.TH "COREDNS-DNS64" 7 "December 2019" "CoreDNS" "CoreDNS Plugins"

.PP
The \fB\fCdns64\fR plugin implements the DNS64 IPv6 transition mechanism. From Wikipedia:

.PP
.RS

.PP
DNS64 describes a DNS server that when asked for a domain's AAAA records, but only finds
A records, synthesizes the AAAA records from the A records.

.RE

.PP
The synthesis in only performed if the query came in via IPv6.

.SH "TODO"
.PP
Not all features required by DNS64 are implemented, only basic AAAA synthesis.

.IP \(bu 4
[ ] Support other \fB\fCproxy\fR protocols in the configuration file

.RS
.IP \(en 4
Requires writing a custom parser for the proxy plugin

.RE
.IP \(bu 4
[ ] Support "mapping of separate IPv4 ranges to separate IPv6 prefixes"
.IP \(bu 4
[ ] Resolve PTR records
.IP \(bu 4
[ ] Follow CNAME records
.IP \(bu 4
[ ] Make resolver DNSSEC aware
.IP \(bu 4
[ ] Improve test coverage
.IP \(bu 4
[ ] Improve the hooking method

.RS
.IP \(en 4
At the moment, the plugin hijacks WriteMsg and does the modifications on the message being written. This very likely can break other plugins especially plugins like DNSSEC.
.IP \(en 4
[ ] What position should the plugin be?

.RE


.SH "USAGE"
.PP
.RS

.PP
\fBThe syntax has changed since 20 September 2019\fP. "upstream" has been renamed to proxy

.RE

.PP
Translate with the well known prefix. Applies to all queries

.PP
.RS

.nf
dns64

.fi
.RE

.PP
Use a custom prefix

.PP
.RS

.nf
dns64 64:1337::/96
dns64 {
    prefix 64:1337::/96
}

.fi
.RE

.PP
Use a reverse proxy, with a custom prefix

.PP
.RS

.nf
dns64 {
    proxy . 1.1.1.1 1.0.0.1
    prefix 64:1337::/96
}

.fi
.RE

.PP
Enable translation even if an existing AAAA record is present

.PP
.RS

.nf
dns64 {
    translateAll
}

.fi
.RE

.IP \(bu 4
\fB\fCprefix\fR specifies any local IPv6 prefix to use, instead of the well known prefix (64:ff9b::/96)
.IP \(bu 4
\fB\fCproxy\fR optionally specifies upstream DNS protocol addresses like the \fB\fCproxy\fR plugin


.SH "SEE ALSO"
.PP
RFC 6147

.SH "INSTALLATION"
.PP
See CoreDNS Documentation
\[la]https://coredns.io/2017/07/25/compile-time-enabling-or-disabling-plugins/\[ra] for more information on how to include this plugin. A DNS64 example
\[la]https://github.com/serverwentdown/dns64-build\[ra] is available too.

.PP
Here's the summary:

.PP
.RS

.nf
package main

import (
    \_ "github.com/coredns/coredns/core/plugin"
    \_ "github.com/coredns/proxy"
    \_ "github.com/serverwentdown/dns64"

    "github.com/coredns/coredns/core/dnsserver"
    "github.com/coredns/coredns/coremain"
)

var additionalDirectives = []string{
    "dns64",
    "proxy",
}

func init() {
    dnsserver.Directives = append(dnsserver.Directives, additionalDirectives...)
}

func main() {
    coremain.Run()
}

.fi
.RE

